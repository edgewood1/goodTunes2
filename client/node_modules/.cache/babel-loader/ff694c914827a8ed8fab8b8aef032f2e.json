{"ast":null,"code":"import _classCallCheck from \"/Users/meldejesus/Desktop/authnetication/scraper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/meldejesus/Desktop/authnetication/scraper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/meldejesus/Desktop/authnetication/scraper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/meldejesus/Desktop/authnetication/scraper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/meldejesus/Desktop/authnetication/scraper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/meldejesus/Desktop/authnetication/scraper/client/src/components/playList.js\";\nimport API from \"../utils/API\";\nimport React from \"react\";\nimport { SaveButton } from \"./buttons\";\nimport { Container, Header, Names, Buttons, LargeFont, MedFont } from \"./playList_css\";\n\nvar Books =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Books, _React$Component);\n\n  function Books() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Books);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Books)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      artist: [],\n      title: \"\"\n    };\n\n    _this.componentDidUpdate = function (_ref) {\n      var appData = _ref.appData,\n          changeState = _ref.changeState;\n\n      if (appData.dbLoad) {\n        _this.getPlaylist();\n\n        changeState({\n          dbLoad: 0\n        });\n      }\n\n      if (appData.scrape) {\n        console.log(appData.scrape);\n\n        _this.scrape();\n\n        changeState({\n          scrape: false\n        });\n      }\n    };\n\n    _this.scrape = function () {\n      console.log(\"scrape)\");\n      API.scrape().then(function (res) {\n        _this.addScrapeToDb(res[\"data\"]);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.addScrapeToDb = function (data) {\n      API.addScrape(data).then(function (res) {\n        console.log(res);\n\n        _this.getPlaylist();\n      });\n    };\n\n    _this.getPlaylist = function () {\n      API.getPlaylist().then(function (res) {\n        _this.setState({\n          artist: res[\"data\"]\n        });\n      }).catch(function (err) {\n        console.log(err);\n\n        _this.getPlaylist();\n      });\n    };\n\n    _this.random = function () {\n      var random = Math.floor(Math.random() * 100000);\n      return random;\n    };\n\n    _this.saveTunes = function (e) {\n      // check if user is logged in\n      if (_this.props.appData.login && _this.props.appData.id) {\n        e.id = _this.props.appData.id;\n        API.saveTune(e).then(function (res) {\n          _this.props.changeState({\n            message: res.data,\n            db: 1\n          });\n        });\n      } else {\n        _this.props.changeState({\n          message: \"you'll need to login\"\n        });\n      }\n    };\n\n    _this.deleteTunes = function (e) {\n      API.deleteTunes(e).then(function (res) {\n        _this.props.changeState({\n          message: res.data\n        });\n      });\n    };\n\n    _this.playTunes = function (e) {\n      API.playTunes(e).then(function (res) {\n        console.log(res);\n\n        _this.props.changeState({\n          playerID: res.data\n        });\n      }).catch(function (err) {\n        console.log(err);\n        return err;\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Books, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getPlaylist();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // if state.login = false, return(Container with login)\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, this.state[\"artist\"].map(function (e) {\n        return React.createElement(Header, {\n          key: _this2.random(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(Names, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(LargeFont, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, e.artist), React.createElement(MedFont, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \" \", e.title, \" \")), React.createElement(Buttons, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: e.source,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.playTunes(e);\n          },\n          style: {\n            margin: \"3%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \" \", \"Play\", \" \"), _this2.props.appData.scrape ? React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.saveTunes(e);\n          },\n          style: {\n            margin: \"3%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"Save\") : React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.deleteTunes(e);\n          },\n          style: {\n            margin: \"3%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \" \", \"Delete\", \" \")));\n      }));\n    }\n  }]);\n\n  return Books;\n}(React.Component);\n\nBooks.getDerivedStateFromProps = function (props, state) {};\n\nexport default Books;","map":{"version":3,"sources":["/Users/meldejesus/Desktop/authnetication/scraper/client/src/components/playList.js"],"names":["API","React","SaveButton","Container","Header","Names","Buttons","LargeFont","MedFont","Books","state","artist","title","componentDidUpdate","appData","changeState","dbLoad","getPlaylist","scrape","console","log","then","res","addScrapeToDb","catch","err","data","addScrape","setState","random","Math","floor","saveTunes","e","props","login","id","saveTune","message","db","deleteTunes","playTunes","playerID","map","source","margin","Component","getDerivedStateFromProps"],"mappings":";;;;;;AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SACEC,SADF,EAEEC,MAFF,EAGEC,KAHF,EAIEC,OAJF,EAKEC,SALF,EAMEC,OANF,QAOO,gBAPP;;IASMC,K;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,KAAK,EAAE;AAFD,K;;UASRC,kB,GAAqB,gBAA8B;AAAA,UAA3BC,OAA2B,QAA3BA,OAA2B;AAAA,UAAlBC,WAAkB,QAAlBA,WAAkB;;AACjD,UAAID,OAAO,CAACE,MAAZ,EAAoB;AAClB,cAAKC,WAAL;;AACAF,QAAAA,WAAW,CAAC;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAD,CAAX;AACD;;AACD,UAAIF,OAAO,CAACI,MAAZ,EAAoB;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYN,OAAO,CAACI,MAApB;;AACA,cAAKA,MAAL;;AACAH,QAAAA,WAAW,CAAC;AAAEG,UAAAA,MAAM,EAAE;AAAV,SAAD,CAAX;AACD;AACF,K;;UAIDA,M,GAAS,YAAM;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACApB,MAAAA,GAAG,CAACkB,MAAJ,GACGG,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,cAAKC,aAAL,CAAmBD,GAAG,CAAC,MAAD,CAAtB;AACD,OAHH,EAIGE,KAJH,CAIS,UAAAC,GAAG;AAAA,eAAIN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAAJ;AAAA,OAJZ;AAKD,K;;UAEDF,a,GAAgB,UAAAG,IAAI,EAAI;AACtB1B,MAAAA,GAAG,CAAC2B,SAAJ,CAAcD,IAAd,EAAoBL,IAApB,CAAyB,UAAAC,GAAG,EAAI;AAC9BH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;;AACA,cAAKL,WAAL;AACD,OAHD;AAID,K;;UAEDA,W,GAAc,YAAM;AAClBjB,MAAAA,GAAG,CAACiB,WAAJ,GACGI,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,cAAKM,QAAL,CAAc;AACZjB,UAAAA,MAAM,EAAEW,GAAG,CAAC,MAAD;AADC,SAAd;AAGD,OALH,EAMGE,KANH,CAMS,UAAAC,GAAG,EAAI;AACZN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;;AACA,cAAKR,WAAL;AACD,OATH;AAUD,K;;UAEDY,M,GAAS,YAAM;AACb,UAAIA,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgB,MAA3B,CAAb;AACA,aAAOA,MAAP;AACD,K;;UAEDG,S,GAAY,UAAAC,CAAC,EAAI;AACf;AACA,UAAI,MAAKC,KAAL,CAAWpB,OAAX,CAAmBqB,KAAnB,IAA4B,MAAKD,KAAL,CAAWpB,OAAX,CAAmBsB,EAAnD,EAAuD;AACrDH,QAAAA,CAAC,CAACG,EAAF,GAAO,MAAKF,KAAL,CAAWpB,OAAX,CAAmBsB,EAA1B;AACApC,QAAAA,GAAG,CAACqC,QAAJ,CAAaJ,CAAb,EAAgBZ,IAAhB,CAAqB,UAAAC,GAAG,EAAI;AAC1B,gBAAKY,KAAL,CAAWnB,WAAX,CAAuB;AAAEuB,YAAAA,OAAO,EAAEhB,GAAG,CAACI,IAAf;AAAqBa,YAAAA,EAAE,EAAE;AAAzB,WAAvB;AACD,SAFD;AAGD,OALD,MAKO;AACL,cAAKL,KAAL,CAAWnB,WAAX,CAAuB;AAAEuB,UAAAA,OAAO,EAAE;AAAX,SAAvB;AACD;AACF,K;;UAEDE,W,GAAc,UAAAP,CAAC,EAAI;AACjBjC,MAAAA,GAAG,CAACwC,WAAJ,CAAgBP,CAAhB,EAAmBZ,IAAnB,CAAwB,UAAAC,GAAG,EAAI;AAC7B,cAAKY,KAAL,CAAWnB,WAAX,CAAuB;AAAEuB,UAAAA,OAAO,EAAEhB,GAAG,CAACI;AAAf,SAAvB;AACD,OAFD;AAGD,K;;UAEDe,S,GAAY,UAAAR,CAAC,EAAI;AACfjC,MAAAA,GAAG,CAACyC,SAAJ,CAAcR,CAAd,EACGZ,IADH,CACQ,UAAAC,GAAG,EAAI;AACXH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;;AACA,cAAKY,KAAL,CAAWnB,WAAX,CAAuB;AAAE2B,UAAAA,QAAQ,EAAEpB,GAAG,CAACI;AAAhB,SAAvB;AACD,OAJH,EAKGF,KALH,CAKS,UAAAC,GAAG,EAAI;AACZN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACA,eAAOA,GAAP;AACD,OARH;AASD,K;;;;;;;wCAhFmB;AAClB,WAAKR,WAAL;AACD;;;6BAgFQ;AAAA;;AACP;AACA,aACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKP,KAAL,CAAW,QAAX,EAAqBiC,GAArB,CAAyB,UAAAV,CAAC;AAAA,eACzB,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAE,MAAI,CAACJ,MAAL,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAYI,CAAC,CAACtB,MAAd,CADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWsB,CAAC,CAACrB,KAAb,MAFF,CADF,EAKE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,GAAG,EAAEqB,CAAC,CAACW,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AACE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACH,SAAL,CAAeR,CAAf,CAAN;AAAA,WADX;AAEE,UAAA,KAAK,EAAE;AAAEY,YAAAA,MAAM,EAAE;AAAV,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIG,GAJH,UAKO,GALP,CAFF,EASG,MAAI,CAACX,KAAL,CAAWpB,OAAX,CAAmBI,MAAnB,GACC;AACE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACc,SAAL,CAAeC,CAAf,CAAN;AAAA,WADX;AAEE,UAAA,KAAK,EAAE;AAAEY,YAAAA,MAAM,EAAE;AAAV,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAQC;AACE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACL,WAAL,CAAiBP,CAAjB,CAAN;AAAA,WADX;AAEE,UAAA,KAAK,EAAE;AAAEY,YAAAA,MAAM,EAAE;AAAV,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIG,GAJH,YAKS,GALT,CAjBJ,CALF,CADyB;AAAA,OAA1B,CADH,CADF;AAsCD;;;;EAhIiB5C,KAAK,CAAC6C,S;;AAApBrC,K,CAsBGsC,wB,GAA2B,UAACb,KAAD,EAAQxB,KAAR,EAAkB,CAAE,C;;AA6GxD,eAAeD,KAAf","sourcesContent":["import API from \"../utils/API\";\nimport React from \"react\";\nimport { SaveButton } from \"./buttons\";\nimport {\n  Container,\n  Header,\n  Names,\n  Buttons,\n  LargeFont,\n  MedFont\n} from \"./playList_css\";\n\nclass Books extends React.Component {\n  state = {\n    artist: [],\n    title: \"\"\n  };\n\n  componentDidMount() {\n    this.getPlaylist();\n  }\n\n  componentDidUpdate = ({ appData, changeState }) => {\n    if (appData.dbLoad) {\n      this.getPlaylist();\n      changeState({ dbLoad: 0 });\n    }\n    if (appData.scrape) {\n      console.log(appData.scrape);\n      this.scrape();\n      changeState({ scrape: false });\n    }\n  };\n\n  static getDerivedStateFromProps = (props, state) => {};\n\n  scrape = () => {\n    console.log(\"scrape)\");\n    API.scrape()\n      .then(res => {\n        this.addScrapeToDb(res[\"data\"]);\n      })\n      .catch(err => console.log(err));\n  };\n\n  addScrapeToDb = data => {\n    API.addScrape(data).then(res => {\n      console.log(res);\n      this.getPlaylist();\n    });\n  };\n\n  getPlaylist = () => {\n    API.getPlaylist()\n      .then(res => {\n        this.setState({\n          artist: res[\"data\"]\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        this.getPlaylist();\n      });\n  };\n\n  random = () => {\n    var random = Math.floor(Math.random() * 100000);\n    return random;\n  };\n\n  saveTunes = e => {\n    // check if user is logged in\n    if (this.props.appData.login && this.props.appData.id) {\n      e.id = this.props.appData.id;\n      API.saveTune(e).then(res => {\n        this.props.changeState({ message: res.data, db: 1 });\n      });\n    } else {\n      this.props.changeState({ message: \"you'll need to login\" });\n    }\n  };\n\n  deleteTunes = e => {\n    API.deleteTunes(e).then(res => {\n      this.props.changeState({ message: res.data });\n    });\n  };\n\n  playTunes = e => {\n    API.playTunes(e)\n      .then(res => {\n        console.log(res);\n        this.props.changeState({ playerID: res.data });\n      })\n      .catch(err => {\n        console.log(err);\n        return err;\n      });\n  };\n\n  render() {\n    // if state.login = false, return(Container with login)\n    return (\n      <Container>\n        {this.state[\"artist\"].map(e => (\n          <Header key={this.random()}>\n            <Names>\n              <LargeFont>{e.artist}</LargeFont>\n              <MedFont> {e.title} </MedFont>\n            </Names>\n            <Buttons>\n              <img src={e.source} />\n              <button\n                onClick={() => this.playTunes(e)}\n                style={{ margin: \"3%\" }}\n              >\n                {\" \"}\n                Play{\" \"}\n              </button>\n              {this.props.appData.scrape ? (\n                <button\n                  onClick={() => this.saveTunes(e)}\n                  style={{ margin: \"3%\" }}\n                >\n                  Save\n                </button>\n              ) : (\n                <button\n                  onClick={() => this.deleteTunes(e)}\n                  style={{ margin: \"3%\" }}\n                >\n                  {\" \"}\n                  Delete{\" \"}\n                </button>\n              )}\n            </Buttons>\n          </Header>\n        ))}\n      </Container>\n    );\n  }\n}\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}