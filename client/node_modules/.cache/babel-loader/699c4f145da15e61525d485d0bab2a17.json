{"ast":null,"code":"import _classCallCheck from \"/Users/meldejesus/Desktop/authnetication/scraper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/meldejesus/Desktop/authnetication/scraper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/meldejesus/Desktop/authnetication/scraper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/meldejesus/Desktop/authnetication/scraper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/meldejesus/Desktop/authnetication/scraper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/meldejesus/Desktop/authnetication/scraper/client/src/components/playList.js\";\nimport API from \"../utils/API\";\nimport React from \"react\";\nimport { Container, Header, Names, Buttons, LargeFont, MedFont } from \"./playList_css\";\n\nvar Books =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Books, _React$Component);\n\n  function Books() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Books);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Books)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      tunes: []\n    };\n\n    _this.getPlaylist = function () {\n      API.getPlaylist().then(function (res) {\n        _this.props.changeState({\n          allTunes: res[\"data\"]\n        });\n\n        _this.setState({\n          tunes: res.data\n        });\n      }).catch(function (err) {\n        console.log(err);\n\n        _this.getPlaylist();\n      });\n    };\n\n    _this.random = function () {\n      var random = Math.floor(Math.random() * 100000);\n      return random;\n    };\n\n    _this.saveTunes = function (e) {\n      // check if user is logged in\n      if (_this.props.appData.login && _this.props.appData.id) {\n        e.id = _this.props.appData.id;\n        API.saveTune(e).then(function (res) {\n          console.log(res);\n          var addTune = _this.props.appData.userTunes;\n          addTune.push(res.data.tune);\n\n          _this.props.changeState({\n            message: res.data.message,\n            userTunes: addTune\n          });\n        });\n      } else {\n        _this.props.changeState({\n          message: \"you'll need to login and try again\",\n          logInShow: 1\n        });\n      }\n    };\n\n    _this.deleteTunes = function (e) {\n      console.log(e);\n      API.deleteTunes(e).then(function (res) {\n        _this.props.changeState({\n          message: res.data.message\n        }); // this.render();\n        // API.getSavedTunes(this.props.appData.id).then(res => {\n        //   console.log(\"done!\");\n        // });\n\n      });\n    };\n\n    _this.updateTunes = function (e) {\n      console.log(e);\n    };\n\n    _this.playTunes = function (e) {\n      API.playTunes(e).then(function (res) {\n        _this.props.changeState({\n          playerID: res.data\n        });\n      }).catch(function (err) {\n        console.log(err);\n        return err;\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Books, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.appData.allTunesShow) {\n        this.getPlaylist();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, this.state.tunes.map(function (e) {\n        return React.createElement(Header, {\n          key: _this2.random(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(Names, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(LargeFont, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, e.artist), React.createElement(MedFont, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, \" \", e.title, \" \")), React.createElement(Buttons, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          alt: \"meaningful\",\n          src: e.source,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.playTunes(e);\n          },\n          style: {\n            margin: \"3%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"Play\"), _this2.props.appData.allTunesShow ? React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.saveTunes(e);\n          },\n          style: {\n            margin: \"3%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, \"Save\") : React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.updateTunes(e);\n          },\n          style: {\n            margin: \"3%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \" \", \"Delete\", \" \")));\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (props.appData.allTunesShow) {\n        return {\n          tunes: props.appData.allTunes\n        };\n      } else {\n        return {\n          tunes: props.appData.userTunes\n        };\n      }\n    }\n  }]);\n\n  return Books;\n}(React.Component);\n\nexport default Books;","map":{"version":3,"sources":["/Users/meldejesus/Desktop/authnetication/scraper/client/src/components/playList.js"],"names":["API","React","Container","Header","Names","Buttons","LargeFont","MedFont","Books","state","tunes","getPlaylist","then","res","props","changeState","allTunes","setState","data","catch","err","console","log","random","Math","floor","saveTunes","e","appData","login","id","saveTune","addTune","userTunes","push","tune","message","logInShow","deleteTunes","updateTunes","playTunes","playerID","allTunesShow","map","artist","title","source","margin","Component"],"mappings":"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","sourcesContent":["import API from \"../utils/API\";\nimport React from \"react\";\n\nimport {\n  Container,\n  Header,\n  Names,\n  Buttons,\n  LargeFont,\n  MedFont\n} from \"./playList_css\";\n\nclass Books extends React.Component {\n  state = {\n    tunes: []\n  };\n\n  componentDidMount() {\n    if (this.props.appData.allTunesShow) {\n      this.getPlaylist();\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.appData.allTunesShow) {\n      return { tunes: props.appData.allTunes };\n    } else {\n      return {\n        tunes: props.appData.userTunes\n      };\n    }\n  }\n\n  getPlaylist = () => {\n    API.getPlaylist()\n      .then(res => {\n        this.props.changeState({ allTunes: res[\"data\"] });\n        this.setState({ tunes: res.data });\n      })\n      .catch(err => {\n        console.log(err);\n        this.getPlaylist();\n      });\n  };\n\n  random = () => {\n    var random = Math.floor(Math.random() * 100000);\n\n    return random;\n  };\n\n  saveTunes = e => {\n    // check if user is logged in\n    if (this.props.appData.login && this.props.appData.id) {\n      e.id = this.props.appData.id;\n      API.saveTune(e).then(res => {\n        console.log(res);\n        var addTune = this.props.appData.userTunes;\n        addTune.push(res.data.tune);\n        this.props.changeState({\n          message: res.data.message,\n          userTunes: addTune\n        });\n      });\n    } else {\n      this.props.changeState({\n        message: \"you'll need to login and try again\",\n        logInShow: 1\n      });\n    }\n  };\n\n  deleteTunes = e => {\n    console.log(e);\n    API.deleteTunes(e).then(res => {\n      this.props.changeState({ message: res.data.message });\n      // this.render();\n      // API.getSavedTunes(this.props.appData.id).then(res => {\n      //   console.log(\"done!\");\n      // });\n    });\n  };\n\n  updateTunes = e => {\n    console.log(e);\n  };\n\n  playTunes = e => {\n    API.playTunes(e)\n      .then(res => {\n        this.props.changeState({ playerID: res.data });\n      })\n      .catch(err => {\n        console.log(err);\n        return err;\n      });\n  };\n\n  render() {\n    return (\n      <Container>\n        {this.state.tunes.map(e => (\n          <Header key={this.random()}>\n            <Names>\n              <LargeFont>{e.artist}</LargeFont>\n              <MedFont> {e.title} </MedFont>\n            </Names>\n            <Buttons>\n              <img alt=\"meaningful\" src={e.source} />\n              <button\n                onClick={() => this.playTunes(e)}\n                style={{ margin: \"3%\" }}\n              >\n                Play\n              </button>\n              {this.props.appData.allTunesShow ? (\n                <button\n                  onClick={() => this.saveTunes(e)}\n                  style={{ margin: \"3%\" }}\n                >\n                  Save\n                </button>\n              ) : (\n                <button\n                  onClick={() => this.updateTunes(e)}\n                  style={{ margin: \"3%\" }}\n                >\n                  {\" \"}\n                  Delete{\" \"}\n                </button>\n              )}\n            </Buttons>\n          </Header>\n        ))}\n      </Container>\n    );\n  }\n}\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}